@using Santiago.Web.Helpers
@model object

@{
  var validationEnabled = (bool)(ViewData["Validation"] ?? true);
  var emptyValue = (string)ViewData["EmptyValue"];
  var valueTemplate = (string)ViewData["ValueTemplate"]; // Конструкция {0} в шаблоне заменяется на значение свойства.
  var editorCssClass = (string)ViewData["EditorCssClass"];
  var textCssClass = (string)ViewData["TextCssClass"];
}

<div class="form-group js-editor @editorCssClass" data-editor-type="site-setting-hidden-with-display-value">
  @Html.LabelFor(x => x, new { @class = "col-sm-3 control-label" })
  <div class="col-sm-6">
    @Html.HiddenFor(x => x)
    <div class="form-control-static">
      @if (Model != null)
      {
        @Html.DisplayValueFor(x => x, valueTemplate.Replace("{0}", Model.ToString()), new { @class = textCssClass })
      }
      else
      {
        @Html.DisplayValueFor(x => x, emptyValue, new { @class = "empty-value-text " + textCssClass })
      }
    </div>
    @if (validationEnabled)
    {
      <div class="validation-error-message-wrapper">
        @Html.ValidationMessageFor(x => x, null, new { @class = "validation-error-message" })
      </div>
    }
  </div>
</div>